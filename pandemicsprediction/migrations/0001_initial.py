# Generated by Django 2.2.5 on 2021-02-18 21:54

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ResultRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=2)),
                ('year', models.IntegerField()),
                ('weekofyear', models.IntegerField()),
                ('total_cases', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='TrainingOptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trainedFeatures', models.IntegerField(default=0)),
                ('model_name', models.TextField(default='')),
                ('regressor', models.BinaryField()),
            ],
        ),
        migrations.CreateModel(
            name='TrainingRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=2)),
                ('year', models.IntegerField()),
                ('weekofyear', models.IntegerField()),
                ('total_cases', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='WeatherRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=2)),
                ('year', models.IntegerField()),
                ('weekofyear', models.IntegerField()),
                ('week_start_date', models.DateField()),
                ('ndvi_ne', models.FloatField()),
                ('ndvi_nw', models.FloatField()),
                ('ndvi_se', models.FloatField()),
                ('ndvi_sw', models.FloatField()),
                ('precipitation_amt_mm', models.FloatField()),
                ('reanalysis_air_temp_k', models.FloatField()),
                ('reanalysis_avg_temp_k', models.FloatField()),
                ('reanalysis_dew_point_temp_k', models.FloatField()),
                ('reanalysis_max_air_temp_k', models.FloatField()),
                ('reanalysis_min_air_temp_k', models.FloatField()),
                ('reanalysis_precip_amt_kg_per_m2', models.FloatField()),
                ('reanalysis_relative_humidity_percent', models.FloatField()),
                ('reanalysis_sat_precip_amt_mm', models.FloatField()),
                ('reanalysis_specific_humidity_g_per_kg', models.FloatField()),
                ('reanalysis_tdtr_k', models.FloatField()),
                ('station_avg_temp_c', models.FloatField()),
                ('station_diur_temp_rng_c', models.FloatField()),
                ('station_max_temp_c', models.FloatField()),
                ('station_min_temp_c', models.FloatField()),
                ('station_precip_mm', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='TrainedFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.IntegerField(default=0)),
                ('zero', models.BooleanField(default=True)),
                ('weight', models.FloatField()),
                ('set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pandemicsprediction.TrainingOptions')),
            ],
        ),
    ]
